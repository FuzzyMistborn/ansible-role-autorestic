---
- name: get stat of autorestic_install_path
  stat:
    path: "{{ autorestic_install_path }}"
  register: is_installed

- name: get installed autorestic version
  shell: "{{ is_installed.stat.path }} --version | grep -oP 'autorestic\\ version\ \\K[0-9]*\\.[0-9]*\\.[0-9]*'"
  register: installed_version_registered
  changed_when: false
  when: is_installed.stat.exists

- name: set autorestic installed
  set_fact:
    autorestic_is_installed: "{{ is_installed.stat.exists }}"

- name: get latest GH autorestic version
  uri:
    url: https://api.github.com/repos/cupcakearmy/autorestic/releases/latest
    return_content: true
  register: release_version_registered
  when: autorestic_download_latest_ver == True

- name: set autorestic version (latest)
  set_fact:
    autorestic_ver: "{{ release_version_registered.json.tag_name|regex_replace('v') }}"
  when: autorestic_download_latest_ver == True

- name: set autorestic version (pinned)
  set_fact:
    autorestic_ver: "{{ autorestic_pinned_ver }}"
  when: autorestic_download_latest_ver == False

- name: update autorestic binary
  command: "/usr/local/bin/autorestic upgrade"
  when: autorestic_is_installed == True and autorestic_download_latest_ver == True
  register: update
  changed_when: "'Already up to date' not in update.stdout_lines"
##
- name: set autorestic version if not already
  set_fact: autorestic_ver="{{ release_latest.json.tag_name }}"
  when: autorestic_ver is undefined and force_install == True
##
- name: download autorestic release
  get_url:
    url: "{{ autorestic_gh_url }}/{{ autorestic_ver }}/autorestic_{{ autorestic_ver|regex_replace('v') }}_{{ autorestic_distro }}.bz2"
    dest: /tmp
    force: yes
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
    mode: +x
  when: autorestic_is_installed == False and ( installed_version_registered.stdout < autorestic_pinned_ver )

###
- name: set autorestic filename
  set_fact: file_name="autorestic_{{ autorestic_ver | regex_replace('v') }}_{{ autorestic_distro }}.bz2"
  when: autorestic_is_installed == True

- name: Unzip autorestic release
  shell: "cd /tmp && bzip2 -d {{ file_name }} && mv {{ file_name | regex_replace('.bz2') }} /usr/local/bin/autorestic"
  when: force_install == True
